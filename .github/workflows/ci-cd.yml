name: ðŸš€ Deploy Spring Boot via Docker Compose

on:
  push:
    branches: [deploy]

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/smartroom-app

jobs:
  build-and-push:
    name:  Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
    - name:  Checkout code
      uses: actions/checkout@v3

    - name:  Login to GHCR
      run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

    - name:  Build image
      run: docker build -t $IMAGE_NAME:latest .

    - name: ðŸ“¤ Push image
      run: docker push $IMAGE_NAME:latest

  deploy:
    name:  Deploy 
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name:  Checkout code  # Add this step to get the branch files
      uses: actions/checkout@v3

    - name:  Táº¡o tá»‡p secret cá»¥c bá»™
      run: |
        echo "${{ secrets.ENV_FILE }}" > .env
        echo "${{ secrets.SERVICE_ACCOUNT_JSON }}" > serviceAccountKey.json

    - name:  Copy file lÃªn EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: |
          .env
          serviceAccountKey.json
          docker-compose-staging.yml
        target: /home/${{ secrets.EC2_USER }}/smartroom-deploy

    - name:  SSH vÃ  triá»ƒn khai Docker Compose
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /home/${{ secrets.EC2_USER }}/smartroom-deploy
    
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
          
          docker compose -f docker-compose-staging.yml down
          docker rmi $IMAGE_NAME:latest || true
          docker compose -f docker-compose-staging.yml pull
          docker compose -f docker-compose-staging.yml up -d
