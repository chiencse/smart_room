name:  Deploy Spring Boot via Docker Compose

on:
  push:
    branches: [main]

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/smartroom-app

jobs:
  build-and-push:
    name: üî® Build and Push to GHCR
    runs-on: ubuntu-latest

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v3

    - name: üîê Login to GHCR
      run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

    - name: üê≥ Build image
      run: docker build -t $IMAGE_NAME:latest .

    - name: üì§ Push image to GHCR
      run: docker push $IMAGE_NAME:latest

  deploy:
    name: üöÄ Deploy to EC2 with Docker Compose
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: üìÅ T·∫°o t·ªáp c·∫•u h√¨nh
      run: |
        echo "${{ secrets.ENV_FILE }}" > .env
        echo "${{ secrets.SERVICE_ACCOUNT_JSON }}" > serviceAccountKey.json
        cat <<EOF > docker-compose.yml
        version: '3.9'

        services:
          app:
            image: $IMAGE_NAME:latest
            container_name: smartroom_app
            env_file:
              - .env
            volumes:
              - ./serviceAccountKey.json:/app/src/main/resources/serviceAccountKey.json
            ports:
              - "8080:8080"
            restart: unless-stopped
        EOF

    - name: üì§ Copy t·ªáp l√™n EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: |
          .env
          serviceAccountKey.json
          docker-compose.yml
        target: /home/${{ secrets.EC2_USER }}/deploy

    - name: üîê SSH v√† kh·ªüi ch·∫°y Docker Compose
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /home/${{ secrets.EC2_USER }}/deploy
          echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
          docker-compose down
          
          docker rmi $IMAGE_NAME:latest || true
          
          docker-compose pull
          docker-compose up -d
