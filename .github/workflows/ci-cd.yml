name: üöÄ Deploy Spring Boot via Docker Compose

on:
  push:
    branches: [deploy]
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/smartroom-app

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Run Maven tests with H2
      run: mvn clean test -Dspring.profiles.active=test

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to GHCR
      run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

    - name: Build image
      run: docker build -t $IMAGE_NAME:latest .

    - name: üì§ Push image
      run: docker push $IMAGE_NAME:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: T·∫°o t·ªáp secret c·ª•c b·ªô
      run: |
        echo "${{ secrets.ENV_FILE }}" > .env

    - name: Copy files to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: ".env,docker-compose-staging.yml"
        target: /home/${{ secrets.EC2_USER }}/smartroom-deploy

    - name: üîê SSH and deploy Docker Compose
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        envs: GHCR_TOKEN,GHCR_USERNAME,IMAGE_NAME
        script: |
          cd /home/${{ secrets.EC2_USER }}/smartroom-deploy
          echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USERNAME" --password-stdin
          
          docker compose -f docker-compose-staging.yml down
          docker rmi $IMAGE_NAME:latest || true
          docker compose -f docker-compose-staging.yml pull
          docker compose -f docker-compose-staging.yml up -d
      env:
        GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
        GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
        IMAGE_NAME: ${{ env.IMAGE_NAME }}
