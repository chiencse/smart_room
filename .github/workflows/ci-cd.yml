name: üöÄ Deploy Spring Boot via Docker Compose

on:
  workflow_dispatch:  # Cho ph√©p ch·∫°y th·ªß c√¥ng t·ª´ UI GitHub
    inputs:
      action:
        description: "Ch·ªçn h√†nh ƒë·ªông c·∫ßn th·ª±c hi·ªán"
        required: true
        default: "deploy"
        type: choice
        options:
          - build-and-push
          - deploy

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/smartroom-app

jobs:
  build-and-push:
    if: ${{ github.event.inputs.action == 'build-and-push' }}
    name: üî® Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üîê Login to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: üê≥ Build image
        run: docker build -t $IMAGE_NAME:latest .

      - name: üì§ Push image
        run: docker push $IMAGE_NAME:latest

  deploy:
    if: ${{ github.event.inputs.action == 'deploy' }}
    name: üöÄ Deploy
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üìù T·∫°o t·ªáp secret c·ª•c b·ªô
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
          echo "${{ secrets.SERVICE_ACCOUNT_JSON }}" > serviceAccountKey.json

      - name: üì§ Copy file l√™n EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: |
            .env
            serviceAccountKey.json
            docker-compose-staging.yml
          target: /home/${{ secrets.EC2_USER }}/smartroom-deploy

      - name: üîê SSH v√† tri·ªÉn khai Docker Compose
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: GHCR_TOKEN,GHCR_USERNAME,IMAGE_NAME
          script: |
            cd /home/${{ secrets.EC2_USER }}/smartroom-deploy
            echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USERNAME" --password-stdin
            
            docker compose -f docker-compose-staging.yml down
            docker rmi $IMAGE_NAME:latest || true
            docker compose -f docker-compose-staging.yml pull
            docker compose -f docker-compose-staging.yml up -d
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
